getwd()
setwd("~/Documents/GitHub/ProgrammingAssignment2")
}
}
ls
makeCacheMatrix
source("cachematrix.R")
makeCacheMatrix(c(10))
x <- matrix(1:6, 2, 3)
x
makeCacheMatrix(x)
cacheSolve(x)
cacheSolve(x, makeCacheMatrix(x))
View(cacheSolve)
View(cacheSolve)
View(cacheSolve)
View(makeCacheMatrix)
makeCacheMatrix <- function(x = matrix()) {
## functions do
## Write a short comment describing this function
makeCacheMatrix <- function(x = matrix()) {
inv <- NULL
set <- function(y) {
x <<- y
inv <<- NULL
}
get <- function() x
setinverse <- function(inv) inv <<- inverse
getinverse <- function() inv
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
## Write a short comment describing this function
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
inv <- x$getinverse()
if(!is.null(inv)) {
message("getting cached data")
return(inv)
}
data <- x$get()
inv <- solve(data, ...)
x$setinverse(inv)
inv
}
exit
;
;;
